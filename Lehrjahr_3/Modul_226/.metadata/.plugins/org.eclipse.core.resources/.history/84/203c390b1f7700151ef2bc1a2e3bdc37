package ch.severinkaderli.grafik;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JPanel;

/**
 * Papier ist eine von JPanel abgeleitete Swing-Komponente.
 * - Sie dient als "Zeichenblatt" für Zeichnungen.
 * - Sie speichert die Zeichnung in einer Instanzvariablen.
 * - Sie überschreibt die Methode paintComponent der Klasse JPanel
 *   so, dass bei ihrem Aufruf die Zeichnung auf das Papier gezeichnet
 *   wird.
 * 
 * @author Andres Scheidegger
 */
@SuppressWarnings("serial")
public class Papier extends JPanel implements MouseListener, KeyListener {
	
	/**
	 * Die Zeichnung.
	 */
	private Zeichnung zeichnung;
	
	private int x, y;
	
	/**
	 * Enum for the different Drawing Modes
	 */
	public enum DrawingMode {
	    RECTANGLE, LINE, CIRCLE
	}
	private DrawingMode currentMode = Mode.RECTANGLE;
	
	
	public Papier() {
		addMouseListener(this);
		addKeyListener(this);
	}
	
	/**
	 * Die Methode paintComponent zeichnet die Zeichnung auf das Papier.
	 * Sie erhält dazu ein Graphics-Objekt, welches sie an die Zeichnung
	 * weitergibt.
	 * 
	 * @param g  Graphics-Objekt, welches zum zeichnen verwendet werden soll.
	 * @see javax.swing.JComponent#paintComponent(java.awt.Graphics)
	 */
	@Override
	public void paintComponent(final Graphics g) {
    super.paintComponent(g);
		if (zeichnung != null) zeichnung.zeichne(g);
	}
	
	/**
	 * Setter für die Instanzvariable zeichnung.
	 * 
	 * @param zeichnung Die zu zeichnende Zeichnung.
	 */
	public void setZeichnung(final Zeichnung zeichnung) {
		this.zeichnung = zeichnung;
	}

	/**
	 * Mouse Events for Drawing the shapes
	 */
	@Override
	public void mousePressed(MouseEvent e) {
		x = e.getX();
		y = e.getY();
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		int width = e.getX() - x;
		int height = e.getY() - y;
		
		Rechteck figur = new Rechteck(x, y, width, height);
		zeichnung.addFigur(figur);
		repaint();
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {}

	@Override
	public void mouseEntered(MouseEvent e) {}

	@Override
	public void mouseExited(MouseEvent e) {}

	/**
	 * Key events for switching drawing modes
	 * 
	 * r = Rectangles
	 * l = Lines
	 * k = Circles
	 */
	@Override
	public void keyPressed(KeyEvent e) {
		System.out.println(e.getKeyChar());
	}

	@Override
	public void keyReleased(KeyEvent e) {}

	@Override
	public void keyTyped(KeyEvent e) {}
}
